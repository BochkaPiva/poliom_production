# ===========================================
# PRODUCTION .gitignore для POLIOM HR Assistant
# ===========================================

# ===== ДОКУМЕНТАЦИЯ И MD ФАЙЛЫ =====
*.md
!README.md
# Исключаем все .md файлы кроме основного README

# ===== ТЕСТОВЫЕ И DEBUG ФАЙЛЫ =====
test_*.py
*test*.py
debug_*.py
check_*.py
diagnose_*.py
analyze_*.py
simple_test*.py
find_*.py
search_*.py
*_test.py
*test.py
*debug*.py

# ===== ЛОКАЛЬНЫЕ КОНФИГУРАЦИИ =====
.env.local
.env.example
.env.pgvector
*.local

# ===== BAT ФАЙЛЫ ДЛЯ WINDOWS =====
*.bat

# ===== ВРЕМЕННЫЕ И СЛУЖЕБНЫЕ ФАЙЛЫ =====
context_debug.txt
gigachat_status.json
gigachat_alerts.log
gigachat_monitor.log
emergency_app.py
migrate_to_pgvector.py
create_tables.py
db_manager.py
test_connection.py

# ===== PYTHON CACHE И ВИРТУАЛЬНЫЕ СРЕДЫ =====
__pycache__/
*.pyc
*.pyo
*.pyd
.Python
venv/
env/
ENV/
.env

# ===== РАЗРАБОТЧЕСКИЕ КОНФИГУРАЦИИ =====
docker-compose.yml
docker-compose.pgvector.yml
docker-compose.production.yml
run_local.py
start_bot.py
# Оставляем только docker-compose.prod.yml

# ===== UPLOADS И ВРЕМЕННЫЕ ДАННЫЕ =====
uploads/
*.log
logs/
cache/

# ===== IDE И РЕДАКТОРЫ =====
.vscode/
.idea/
*.swp
*.swo
*~

# ===== СИСТЕМНЫЕ ФАЙЛЫ =====
.DS_Store
Thumbs.db
*.tmp

# ===== GIT =====
.git/

# ===== ПРОЦЕССИНГОВЫЕ ФАЙЛЫ =====
process_*.py
*processor*.py
rechunk_*.py
fix_*.py
install_*.py

# ===== ЛОКАЛЬНЫЕ СКРИПТЫ =====
*_simple.py
*_safe.py
quick_*.py
demo_*.py
direct_*.py

# ===== ТЕСТОВЫЕ ДАННЫЕ =====
test_document.txt
*.test
test_data/

# ===== MONITORING ФАЙЛЫ =====
*monitor*.py
*status*.py
*_report.py

# ===== SETUP И INIT ФАЙЛЫ =====
setup_*.py
init.sql
create_*.py

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env.local
.env.production
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# Docker
.dockerignore

# IDE
.vscode/
.idea/
*.swp
*.swo
*~

# OS
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Project specific
uploads/
*.db
*.sqlite
*.sqlite3

# Logs
logs/
*.log

# Virtual environments
services/*/venv/
services/*/env/

# Model cache
models_cache/
.transformers_cache/

# Temporary files
temp/
tmp/

# Secrets (keep .env for development, but exclude production configs)
.env.production
.env.staging

# Database dumps
*.sql
*.dump

# Backup files
*.bak
*.backup

# Node modules (if any frontend)
node_modules/

# Coverage reports
htmlcov/
.coverage

# pytest
.pytest_cache/

# Jupyter
.ipynb_checkpoints/

# ML models and data
*.pkl
*.joblib
*.h5
*.hdf5
models/
data/raw/
data/processed/

# Docker volumes data
postgres_data/
document_uploads/
ml_models_cache/ 